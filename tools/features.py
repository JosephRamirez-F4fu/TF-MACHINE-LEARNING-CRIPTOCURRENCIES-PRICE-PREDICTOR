def calculate_features(df):
    feature_dict = {
        'mean_high': df['high'].mean(),
        'std_high': df['high'].std(),
        'min_high': df['high'].min(),
        'max_high': df['high'].max(),
        'median_high': df['high'].median(),
        'range_high': df['high'].max() - df['high'].min(),
        'skewness_high': df['high'].skew(),
        'kurtosis_high': df['high'].kurtosis(),
        'mean_low': df['low'].mean(),
        'std_low': df['low'].std(),
        'min_low': df['low'].min(),
        'max_low': df['low'].max(),
        'median_low': df['low'].median(),
        'range_low': df['low'].max() - df['low'].min(),
        'skewness_low': df['low'].skew(),
        'kurtosis_low': df['low'].kurtosis(),
        'mean_close': df['close'].mean(),
        'std_close': df['close'].std(),
        'min_close': df['close'].min(),
        'max_close': df['close'].max(),
        'median_close': df['close'].median(),
        'range_close': df['close'].max() - df['close'].min(),
        'skewness_close': df['close'].skew(),
        'kurtosis_close': df['close'].kurtosis(),
        'mean_volume': df['volume'].mean(),
        'std_volume': df['volume'].std(),
        'mean_marketCap': df['marketCap'].mean(),
        'std_marketCap': df['marketCap'].std(),
        'daily_return_mean': df['close'].pct_change().mean(),
        'daily_return_std': df['close'].pct_change().std(),
        'cumulative_return': (df['close'].iloc[-1] / df['close'].iloc[0]) - 1,
        'volatility': df['close'].pct_change().rolling(window=7).std().mean()
    }
    return feature_dict